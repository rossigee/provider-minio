name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.24.5'

jobs:
  build-and-release:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      # Cache disabled due to corruption issues
      # - name: Cache Go modules
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-v2-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-v2-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Get Version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "version_no_v=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Install Crossplane CLI
        run: |
          CLI_PATH=".cache/tools/$(uname -s)_$(uname -m | sed 's/x86_64/amd64/')/crossplane-cli-v1.20.0"
          mkdir -p "$(dirname "$CLI_PATH")"
          curl -fsSL "https://releases.crossplane.io/stable/v1.20.0/bin/$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/')/crank" -o "$CLI_PATH"
          chmod +x "$CLI_PATH"

      - name: Build
        run: |
          make build
        env:
          VERSION: ${{ steps.version.outputs.version_no_v }}

      - name: Publish
        run: |
          make publish
        env:
          VERSION: ${{ steps.version.outputs.version_no_v }}

      - name: Generate Changelog
        id: changelog
        run: |
          # Simple changelog generation
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "## Changes since $PREVIOUS_TAG" > changelog.txt
            git log --oneline $PREVIOUS_TAG..HEAD >> changelog.txt
          else
            echo "## Initial Release" > changelog.txt
            echo "First release of provider-minio for Crossplane" >> changelog.txt
            echo "" >> changelog.txt
            echo "### Features" >> changelog.txt
            echo "- MinIO object storage management" >> changelog.txt
            echo "- Bucket creation and configuration" >> changelog.txt
            echo "- User and access key management" >> changelog.txt
            echo "- Policy management and assignment" >> changelog.txt
            echo "- GitOps-ready S3-compatible storage management" >> changelog.txt
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.version.outputs.version }}
          body_path: changelog.txt
          files: _output/xpkg/*.xpkg
          draft: false
          prerelease: false
